[include shell_command.cfg]

[force_move]
enable_force_move: True



#####################################################################
#   User Interface Software
#####################################################################
[include mainsail.cfg]
[include macros.cfg]
[include printstart_end.cfg]
[include config_backup.cfg]


[exclude_object]

[save_variables]
filename: ~/printer_data/config/saved_variables.cfg

[gcode_arcs]
resolution: 0.1

[mcu]
#####################################################################
# Obtain definition by "ls -l /dev/serial/by-id/"
#####################################################################
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_1E0034001650535556323420-if00
restart_method: command
##--------------------------------------------------------------------

[mcu umb]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_rp2040_32513530320BA45A-if00 
restart_method: command
##--------------------------------------------------------------------


#####################################################################
#   Main Controller Board
#####################################################################
# This file contains common pin mappings for the BIGTREETECH SKR Pico V1.0
# To use this config, the firmware should be compiled for the RP2040 with
# USB communication.

# The "make flash" command does not work on the SKR Pico V1.0. Instead,
# after running "make", copy the generated "out/klipper.uf2" file
# to the mass storage device in RP2040 boot mode

## Voron Design VORON 0.1 SKR Pico V1.0 config

## *** THINGS TO CHANGE/CHECK: ***
## MCU path                                                                     [mcu] section
## Z and Extruder motor currents                                                [tmc2209 stepper_*] sections. Uncomment the stepper motor you have
## Full steps per rotation for Extruder                                         [extruder] section
## Thermistor types                                                             [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Extruder motor currents                                                      [extruder] section
## PID tune                                                                     [extruder] and [heater_bed] sections
## Fine tune E steps                                                            [extruder] section
## For more info                                                                check https://docs.vorondesign.com/build/startup/#v0

[printer]
kinematics: corexy
max_velocity: 350
max_accel: 31000
max_z_velocity: 15
max_z_accel: 45
square_corner_velocity: 6.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
#Motor_3
step_pin: MOT0_STEP
dir_pin: MOT0_DIR                                                     # Check motor direction in link above. If inverted, add a ! before gpio10
enable_pin: !MOT0_EN
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: ^ESTOP0                                                # LDO Picobilical overrides this setting 
position_endstop: 120
position_max: 120
homing_speed: 50                                                    # Can be increased after initial setup, Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: MOT0_CS
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

[stepper_y]
#Motor_4
step_pin: MOT1_STEP
dir_pin: MOT1_DIR                                                      # Check motor direction in link above. If inverted, add a ! before gpio5
enable_pin: !MOT1_EN
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: ^ESTOP1
position_endstop: 120
position_max: 120
homing_speed: 50                                                    # Can be increased after initial setup, Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: MOT1_CS
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: MOT3_STEP
dir_pin: !MOT3_DIR
enable_pin: !MOT3_EN
rotation_distance: 32
microsteps: 32
endstop_pin: probe:z_virtual_endstop
position_max: 121
position_min: -1.5
homing_speed: 7.5
second_homing_speed: 3.0
homing_retract_dist: 5.0

[tmc2209 stepper_z]
uart_pin: MOT3_CS
interpolate: False
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_z1]
step_pin: MOT4_STEP
dir_pin: MOT4_DIR
enable_pin: !MOT4_EN
rotation_distance: 32
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: MOT4_CS
interpolate: False
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_z2]
step_pin: MOT2_STEP
dir_pin: MOT2_DIR
enable_pin: !MOT2_EN
rotation_distance: 32
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: MOT2_CS
interpolate: False
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: MOT6_STEP
dir_pin: !MOT6_DIR                                                   # Add ! if moving opposite direction
enable_pin: !MOT6_EN
full_steps_per_rotation: 200                                       # Set to 200 for LDO 1.8° stepper motor, and set to 400 for OMC(StepperOnline) 0.9° stepper motor
rotation_distance: 22.67895                                            # See calibrating rotation_distance on extruders doc
gear_ratio: 50:10                                                   # For Mini Afterburner
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: umb:gpio4                                                  # LDO Picobilical overrides this setting 
sensor_type: ATC Semitec 104GT-2 # Change this to your actual thermistor type
sensor_pin: T2
pullup_resistor: 2200
#control: pid                                                        # Do PID calibration after initial checks
#pid_Kp: 28.182
#pid_Ki: 1.978
#pid_Kd: 100.397
min_temp: 0
max_temp: 305
max_power: 1.0
min_extrude_temp: 170
max_extrude_only_distance: 1400.0
max_extrude_only_velocity: 75.0
max_extrude_only_accel: 1500
max_extrude_cross_section: 30
pressure_advance: 0.0                                               # See tuning pressure advance doc
pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
uart_pin: MOT6_CS
interpolate: False
run_current: 0.6 
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 0 for spreadcycle, avoid using stealthchop on extruder

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: PA1
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: ATC Semitec 104NT-4-R025H42G 
sensor_pin: TB
smooth_time: 3.0
max_power: 1.0                                                     # Only needed for 100w pads
min_temp: 0
max_temp: 120
#control: pid                                                        # Do PID calibration after initial checks
#pid_kp: 68.453
#pid_ki: 2.749
#pid_kd: 426.122

#####################################################################
# Fan Control
#####################################################################

[heater_fan hotend_fan]
pin: umb:gpio3                                                         # LDO Picobilical overrides this setting
max_power: 1.0
kick_start_time: 0.5
heater: extruder                                                    # LDO Picobilical overrides this setting
heater_temp: 50.0                                                   # LDO Picobilical overrides this setting
#fan_speed: 1.0                                                     # You can't PWM the delta fan unless using blue wire


[fan]
pin: umb:gpio2                                                         # LDO Picobilical overrides this setting
max_power: 1.0
kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.010

[output_pin Zeros]                                            # Optional fan for cooling your PCBs
pin: FAN4
value: 0
shutdown_value: 0

#[output_pin zero2]
#pin: FAN
#value: 0
#shutdown_value: 0

[controller_fan Basement_1]
pin: FAN0
max_power: 0.60
kick_start_time: 0.25
heater: heater_bed                                                   
                                                  

[controller_fan Basement_2]
pin: FAN1
max_power: 0.60
kick_start_time: 0.25
heater: heater_bed 

[output_pin Electronics_Fan]
pin: FAN3
value:0
shutdown_value: 0



#####################################################################
# Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[z_tilt]
z_positions:
  -47.5, 15
  60, 141
  167.5, 15
points:
  5,10
  36,115
  90,10
speed: 200
retries: 8
retry_tolerance: 0.0075
#retry_tolerance: 0.01
horizontal_move_z: 25



[board_pins]
aliases:
    # Stepper drivers
    MOT0_EN=PF14, MOT0_STEP=PF13, MOT0_DIR=PF12, MOT0_CS=PC4,   # MOTOR0
    MOT1_EN=PF15, MOT1_STEP=PG0,  MOT1_DIR=PG1,  MOT1_CS=PD11,  # MOTOR1
    MOT2_EN=PG5,  MOT2_STEP=PF11, MOT2_DIR=PG3,  MOT2_CS=PC6,   # MOTOR2
    MOT3_EN=PA0,  MOT3_STEP=PG4,  MOT3_DIR=PC1,  MOT3_CS=PC7,   # MOTOR3
    MOT4_EN=PG2,  MOT4_STEP=PF9,  MOT4_DIR=PF10, MOT4_CS=PF2,   # MOTOR4
    MOT5_EN=PF1,  MOT5_STEP=PC13, MOT5_DIR=PF0,  MOT5_CS=PE4,   # MOTOR5
    MOT6_EN=PD4,  MOT6_STEP=PE2,  MOT6_DIR=PE3,  MOT6_CS=PE1,   # MOTOR6
    MOT7_EN=PE0,  MOT7_STEP=PE6,  MOT7_DIR=PA14, MOT7_CS=PD3,   # MOTOR7

    # Heaters
    BED_OUT=PA1,
    HE0=PA2, HE1=PA3, HE2=PB10, HE3=PB11,

    # Thermisors
    TB=PF3, T0=PF4, T1=PF5, T2=PF6, T3=PF7,
    PT100=PF8,

    # Fans
    FAN0=PA8, FAN1=PE5, FAN2=PD12, FAN3=PD13, FAN4=PD14, FAN5=PD15,

    # End stops
    ESTOP0=PG6,  ESTOP1=PG9,  ESTOP2=PG10, ESTOP3=PG11,
    ESTOP4=PG12, ESTOP5=PG13, ESTOP6=PG14, ESTOP7=PG15,

    # EXP1
    EXP1_1=PE8,   EXP1_2=PE7,
    EXP1_3=PE9,   EXP1_4=PE10,
    EXP1_5=PE12,  EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14,  EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2
    EXP2_1=PA6,   EXP2_2=PA5,
    EXP2_3=PB1,   EXP2_4=PA4,
    EXP2_5=PB2,   EXP2_6=PA7,     # Slot in the socket on this side
    EXP2_7=PC15,  EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>,

    # TFT
    TFT_5=<RST>,
    TFT_4=PA10,
    TFT_3=PA9,
    TFT_2=<GND>,
    TFT_1=<5V>,

    # Inductive Probe
    PRB_1=<DCV>, PRB_2=<GND>, PRB_3=PB7,

    # BL Touch
    BLT_5=<GND>,
    BLT_4=<5V>,
    BLT_CTL=PB6,   # BL Touch servo pin
    BLT_2=<GND>,
    BLT_SNSR=PB7,  # BL Touch end stop pin

    # LED Control
    NEOPXL_3=<GND>, NEOPXL_2=PB0, NEOPXL_1=<5V>,

    # Raspberry Pi
    RPI_1=<5V>,  RPI_2=<5V>,
    RPI_3=<GND>, RPI_4=<GND>,
    RPI_5=<GND>, RPI_6=<GND>,
    RPI_7=<GND>, RPI_8=<GND>,
    RPI_RX=PD6,  RPI_TX=PD5,

    # SPI3
    SPI3_2=<3V3>, SPI3_MOSI=PB5, SPI3_CS=PA15, SPI3_8=<GND>, SPI3_10=<5V>,
    SPI3_1=<GND>, SPI3_MISO=PB4, SPI3_SCK=PB3, SPI3_7=<GND>, SPI3_9=<5V>,

    # Other headers
    POWER_DET=PC0,
    PS_ON=PE11

#####################################################################
#   LDO Picobilical
#####################################################################
## Comment for the secondary controller board 
# This file contains pin mappings for the LDO V0 Kit using the LDO Picobilical as a secondary controller.
# To use this config, the firmware should be compiled for the Raspberry Pi RP2040

# after running "make", copy the generated "klipper/out/klipper.uf2" firmware file 
# reboot the picobilical controller into BOOTSEL mode while connected to a PC, and copy the firmware file into the controller

## Voron Design VORON0 x LDO Picobilical partial config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] sections

## *MAKE SURE* to include this partial config file *AFTER* the main controller config. 
## This will ensure the relavent sections are overwritten by the picobilical mappings specified here.

#####################################################################
#   X Stepper Settings
#####################################################################

## XES - Toolhead PCB
## Overwrites the X endstop connection 
#[stepper_x]
#endstop_pin: umb:gpio0


#####################################################################
#   Extruder
#####################################################################

## HE0, TH0 - Toolhead PCB
## Overwrites the extruder heater & thermistor connection
[extruder]
heater_pin: umb:gpio4
sensor_type: ATC Semitec 104GT-2 # Change this to your actual thermistor type
sensor_pin: umb:gpio29
pullup_resistor: 2200


#####################################################################
#   Fan Control
#####################################################################

## PCF - Toolhead PCB
## Overwrites the part fan connection 
[fan]
pin: umb:gpio2

## HEF - Toolhead PCB
## Overwrites the hotend fan connection 
[heater_fan hotend_fan]
pin: umb:gpio3
heater: extruder
heater_temp: 50.0


#####################################################################
#   Neopixels
#####################################################################

## Neopixel 1 - Frame PCB
[neopixel HotendLights]
pin: umb:gpio1
chain_count: 3
color_order: GRBW
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0

[output_pin caselights]
pin: FAN5
pwm: true
value:1
shutdown_value: 0
cycle_time: 0.001


## Neopixel 2 - Frame PCB
#[neopixel rgb2]
#pin: umb:gpio7
#chain_count: 1
#color_order: GRB
#initial_RED: 0.3
#initial_GREEN: 0.3
#initial_BLUE: 0.3

## Buzzer - Frame PCB
[output_pin beeper]
pin: umb:gpio5
value: 0
shutdown_value: 0

[gcode_macro M300]
description: Custom M300 code to allow beeper to be used in gcode
gcode:
    {% set TIME_MS = params.P|default(100)|float %}
    SET_PIN PIN=beeper VALUE=1
    G4 P{TIME_MS}
    SET_PIN PIN=beeper VALUE=0

#####################################################################
#   Additional Sensors
#####################################################################

[thermistor CMFB103F3950FANT]
temperature1: 0.0
resistance1: 32116.0
temperature2: 40.0
resistance2: 5309.0
temperature3: 80.0
resistance3: 1228.0

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
accel_per_hz: 150
probe_points:
    60, 60, 10  

## CT - Frame PCB
## Chamber thermistor
[temperature_sensor UMB Temp]
sensor_type: CMFB103F3950FANT
sensor_pin: umb:gpio28
pullup_resistor: 2200
min_temp: 0
max_temp: 100
gcode_id: chamber_th

[temperature_sensor Octopus]
sensor_type: temperature_mcu

[temperature_sensor Pi]
sensor_type: temperature_host

[temperature_sensor Frame]
sensor_type: Generic 3950
sensor_pin: T0


## Sensorless Homing
## This file contains configuration and macros pertaining to sensorless homing for the Voron 0.2 
## It is based on this guide: https://docs.vorondesign.com/community/howto/clee/sensorless_xy_homing.html

## *MAKE SURE* to include this config file *AFTER* the main controller config. 
## This will ensure the relavent sections are overwritten by the configurations specified here.

## If using SKR Pico or SKR mini E3 mainboards, make sure to set the X-DIAG and Y-DIAG jumpers to enable sensorless homing
## See here https://github.com/bigtreetech/SKR-Pico/blob/master/Hardware/BTT%20SKR%20Pico%20V1.0-PIN.pdf

[stepper_x]
endstop_pin: tmc2209_stepper_x:virtual_endstop
homing_speed: 40
homing_retract_dist: 0

[tmc2209 stepper_x]
diag_pin: ^ESTOP0 
driver_SGTHRS: 90  #Tune this, use the highest value that will not cause a false trigger

[stepper_y]
endstop_pin: tmc2209_stepper_y:virtual_endstop
homing_speed: 40
homing_retract_dist: 0

[tmc2209 stepper_y]
diag_pin: ^ESTOP1
driver_SGTHRS: 90  #Tune this, use the highest value that will not cause a false trigger

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
    SAVE_GCODE_STATE NAME=STATE_HOME_X

    # Home
    G28 X
    # Move away
    G91
    G1 X-5 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P500
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    RESTORE_GCODE_STATE NAME=STATE_HOME_X

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
    SAVE_GCODE_STATE NAME=STATE_HOME_Y

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-5 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P500
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    RESTORE_GCODE_STATE NAME=STATE_HOME_Y

[homing_override]
axes: xyz
set_position_z: 0
gcode:
    {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
    SAVE_GCODE_STATE NAME=STATE_HOME_OVERRIDE

    # Home Z first, to avoid any situation where the nozzle might scrape the bed
    {% if home_all or 'Z' in params %}
        G28 Z
    {% endif %}

    {% if home_all or 'X' in params %}
        _HOME_X
    {% endif %}

    {% if home_all or 'Y' in params %}
        _HOME_Y
    {% endif %}
    
    G90
    G0 X60 Y60 Z20 F3600 # move to bed center
    RESTORE_GCODE_STATE NAME=STATE_HOME_OVERRIDE


[gcode_shell_command plot_graph]
command: bash /home/pi/printer_data/config/scripts/plot_graphs.sh
timeout: 500.0
verbose: True

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [stepper_z]
#*# position_endstop = 118.750
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 68.282
#*# pid_ki = 1.105
#*# pid_kd = 1054.953
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 26.985
#*# pid_ki = 3.911
#*# pid_kd = 46.546
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 79.8
#*# shaper_type_y = 2hump_ei
#*# shaper_freq_y = 77.2
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.134375, -0.160000, -0.166250
#*# 	0.083125, 0.055000, 0.003750
#*# 	0.084375, 0.056875, 0.083750
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 25.0
#*# max_x = 95.0
#*# min_y = 25.0
#*# max_y = 95.0
